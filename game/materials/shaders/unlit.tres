[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://b04lsg2k78js1"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_7julf"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_dotyd"]
source = 5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_3k5f4"]
parameter_name = "Texture_Base"
texture_filter = 1

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, depth_test_default, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D Texture_Base : filter_nearest;



void fragment() {
// FloatConstant:2
	float n_out2p0 = 0.000000;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Texture_Base, UV);


// Output:0
	ALBEDO = vec3(n_out2p0);
	SPECULAR = n_out2p0;
	EMISSION = vec3(n_out3p0.xyz);


}
"
nodes/fragment/2/node = SubResource("VisualShaderNodeFloatConstant_7julf")
nodes/fragment/2/position = Vector2(80, 200)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_dotyd")
nodes/fragment/3/position = Vector2(-100, 340)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture2DParameter_3k5f4")
nodes/fragment/4/position = Vector2(-520, 300)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 4, 0, 3, 2, 3, 0, 0, 5, 2, 0, 0, 4)
